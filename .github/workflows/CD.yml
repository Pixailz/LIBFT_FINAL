name: CD

run-name: ft_libft CD deployment

on:
  workflow_call:

jobs:
  git_release:
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Retrieve repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: 🔧 Declare some var
        run: |+
          {
            echo "sha7=${GITHUB_SHA::7}"
            printf "ver=%s" \
            "$(perl -nE 'print if s|VERSION\s+:= (\d\.\d\.\d)|\1|gm' ./mk/config.mk)"
          } >> ${GITHUB_ENV}

      - name: 🔧 Build up libft.a and pack release
        run: |+
          DISABLE_HELPER=1 make re
          DISABLE_HELPER=1 make clean
          cd ..
          tar czf ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz ./ft_libft/libft.a
          tar rzf ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz ./ft_libft/Makefile
          tar rzf ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz ./ft_libft/README.md
          tar rzf ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz ./ft_libft/LICENSE
          tar rzf ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz ./ft_libft/inc/**/**
          tar rzf ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz ./ft_libft/src/**/**
          tar rzf ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz ./ft_libft/mk/**/**
          tar rzf ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz ./ft_libft/rsc/**/**
          tar rzf ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz ./ft_libft/test/**/**

      - name: ☁️ Upload release artifact
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          draft: false
          prerelease: true
          name: build ${{ env.sha7 }}
          tag_name: v${{ env.ver }}-${{ env.sha7 }}
          files: ft_libft-${{ env.ver }}-${{ env.sha7 }}.tar.gz
          token: ${{ secrets.GITHUB_TOKEN }}

  update_SupaBlank:
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Retrieve SupaBlank repo
        uses: actions/checkout@v3
        with:
          repository: "Pixailz/SupaBlank"
          submodules: recursive
          token: ${{ secrets.PAT_ACTIONS }}

      - name: ☁️ Update submodules
        run: |+
          git submodule update --remote --recursive

      - name: 🔧 test SupaBlank
        run: make

      - name: ☁️ Configure, commit and push
        run: |+
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -a -m "[ft_libft] submodule update spread"
          git status && git push

  update_ft_ping:
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Retrieve ft_ping repo
        uses: actions/checkout@v3
        with:
          repository: "Pixailz/ft_ping"
          submodules: recursive
          token: ${{ secrets.PAT_ACTIONS }}

      - name: ☁️ Update submodules
        run: |+
          git submodule update --remote --recursive

      - name: 🔧 test ft_ping
        run: make

      - name: ☁️ Configure, commit and push
        run: |+
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'
          git commit -a -m "[ft_libft] submodule update spread"
          git status && git push
