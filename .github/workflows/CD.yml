name: CD

run-name: ft_libft CD deployment

on:
  workflow_call:

jobs:
  git_release:
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Retrieve repo
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: 🔧 Build up libft.a
        run: DISABLE_HELPER=1 make re

      - name: 🔧 Declare some var
        run: |+
          {
            echo "sha7=${GITHUB_SHA::7}"
            printf "ver=%s" \
            "$(perl -nE 'print if s|VERSION\s+:= (\d\.\d\.\d)|\1|gm' ./mk/config.mk)"
          } >> ${GITHUB_ENV}

      - name: ☁️ Upload release artifact
        if: success()
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          draft: false
          prerelease: true
          name: build ${{ env.sha7 }}
          tag_name: v${{ env.ver }}-${{ env.sha7 }}
          files: |
            libft.a
            inc/**
          token: ${{ secrets.GITHUB_TOKEN }}

  update_SupaBlank:
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Retrieve SupaBlank repo
        uses: actions/checkout@v2
        with:
          repository: "Pixailz/SupaBlank"
          submodules: recursive
          token: ${{ secrets.PAT_ACTIONS }}

      - name: ☁️ Configure and update
        run: |+
          git config user.name github-actions
          git config user.email github-actions@github.com
          git submodule update --remote --recursive
          git commit -a -m "[ft_libft] submodule update spread"

      - name: 🔧 test SupaBlank
        run: make

      - name: ☁️ SupaBlank push
        run: git status && git push

  update_ft_ping:
    runs-on: ubuntu-latest
    steps:
      - name: ☁️ Retrieve ft_ping repo
        uses: actions/checkout@v2
        with:
          repository: "Pixailz/ft_ping"
          submodules: recursive
          token: ${{ secrets.PAT_ACTIONS }}

      - name: ☁️ Configure and update
        run: |+
          git config user.name github-actions
          git config user.email github-actions@github.com
          git submodule update --remote --recursive
          git commit -a -m "[ft_libft] submodule update spread"

      - name: 🔧 test ft_ping
        run: make

      - name: ☁️ ft_ping push
        run: git status && git push
